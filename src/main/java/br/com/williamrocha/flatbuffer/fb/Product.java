// automatically generated by the FlatBuffers compiler, do not modify

package br.com.williamrocha.flatbuffer.fb;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.Table;

import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Product extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_23_3_3(); }
  public static Product getRootAsProduct(ByteBuffer _bb) { return getRootAsProduct(_bb, new Product()); }
  public static Product getRootAsProduct(ByteBuffer _bb, Product obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Product __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int id() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String name() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public String description() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer descriptionAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer descriptionInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String partNumber() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer partNumberAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer partNumberInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }

  public static int createProduct(FlatBufferBuilder builder,
      int id,
      int nameOffset,
      int descriptionOffset,
      int partNumberOffset) {
    builder.startTable(4);
    Product.addPartNumber(builder, partNumberOffset);
    Product.addDescription(builder, descriptionOffset);
    Product.addName(builder, nameOffset);
    Product.addId(builder, id);
    return Product.endProduct(builder);
  }

  public static void startProduct(FlatBufferBuilder builder) { builder.startTable(4); }
  public static void addId(FlatBufferBuilder builder, int id) { builder.addInt(0, id, 0); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(1, nameOffset, 0); }
  public static void addDescription(FlatBufferBuilder builder, int descriptionOffset) { builder.addOffset(2, descriptionOffset, 0); }
  public static void addPartNumber(FlatBufferBuilder builder, int partNumberOffset) { builder.addOffset(3, partNumberOffset, 0); }
  public static int endProduct(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishProductBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedProductBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Product get(int j) { return get(new Product(), j); }
    public Product get(Product obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

